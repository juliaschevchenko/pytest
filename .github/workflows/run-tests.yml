name: API Tests

on:
  schedule:
    - cron: '0 1 * * *'  # 1:15 UTC = 4:15 –ø–æ –ú–°–ö
  workflow_dispatch:     # –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: |
        python -m playwright install --with-deps

    - name: Run UI tests
      run: |
        pytest login_project

    - name: Run API tests
      run: |
        rm -rf allure-results allure-report
        pytest api_project --alluredir=allure-results

    - name: Install Allure CLI
      run: |
        sudo apt update
        sudo apt install -y default-jre unzip
        wget https://github.com/allure-framework/allure2/releases/latest/download/allure-2.34.1.zip
        unzip allure-2.34.1.zip
        sudo mv allure-2.34.1 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure

    - name: Generate Allure report
      run: |
        allure generate allure-results -o allure-report --clean

    - name: Deploy Allure report to GitHub Pages
      if: always()
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

        git clone --depth 1 --branch gh-pages https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages

        rm -rf gh-pages/allure-report
        cp -r allure-report gh-pages/allure-report

        # timestamp —á—Ç–æ–±—ã git –≤–∏–¥–µ–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è
        date > gh-pages/allure-report/generated.txt

        cd gh-pages
        git add .
        git commit -m "Update Allure report üöÄ" || echo "No changes to commit"
        git push

    - name: Send Telegram message
      if: always()  # –≤—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
      run: |
        STATUS=${{ job.status }}
        if [[ "$STATUS" == "success" ]]; then
          ICON="‚úÖ"
        else
          ICON="‚ùå"
        fi

        REPORT_URL="https://juliaschevchenko.github.io/pytest/allure-report/index.html"
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="${ICON} Job *${{ github.job }}* completed with status: *${STATUS}* in repo [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}). [Open Allure report](${REPORT_URL})" \
          -d parse_mode=Markdown