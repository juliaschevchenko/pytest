name: API Tests

on:
  schedule:
    - cron: '15 1 * * *'  # 1:15 UTC = 4:15 по МСК
  workflow_dispatch:     # для ручного запуска
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install allure-pytest

    - name: Run API tests only
      run: |
        pytest api_project --alluredir=allure-results

    - name: Download Allure CLI
      run: |
        curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.24.1/allure-2.24.1.zip
        unzip -o allure.zip
        echo "$GITHUB_WORKSPACE/allure-2.24.1/bin" >> $GITHUB_PATH

    - name: Generate Allure report
      run: allure generate allure-results -o allure-report --clean

    - name: Upload Allure report artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report

    - name: Send Telegram message
      if: always()  # всегда выполняется
      run: |
        STATUS=${{ job.status }}
        if [[ "$STATUS" == "success" ]]; then
          ICON="✅"
        else
          ICON="❌"
        fi
        
        REPORT_URL="https://juliaschevchenko.github.io/${{github.repository}}/"
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TG_CHAT_ID }} \
          -d text="${ICON} Job *${{ github.job }}* completed with status: *${STATUS}* in repo [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}). [Open Allure report](${REPORT_URL})" \
          -d parse_mode=Markdown

